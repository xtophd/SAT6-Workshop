
---
- hosts: myNodes, !myShelter
  tasks:

    - name: "SAT6-POSTINSTALL: remove older katello certs"
      shell:
        cmd: |
          yum remove -y katello-ca-consumer*.noarch

    - name: "SAT6-POSTINSTALL: yum install satellite crt"
      vars:
        - p_fqdn: "{{ hostvars[item]['inventory_hostname_short'] }}.{{ workshop_extras.network_fqdn }}"
      yum: 
        name: "http://{{ p_fqdn }}/pub/katello-ca-consumer-{{ p_fqdn }}-1.0-1.noarch.rpm"
        state: installed
        disable_gpg_check: yes
      loop: "{{ groups['mySatellite'] }}"

    - name: "SAT6-POSTINSTALL: clear yum cache"
      shell:                                                                                           
        cmd: |                                                                                         
          rm -rf /var/cache/yum/*

    - name: "SAT6-POSTINSTALL: install cheat-(scripts) in /usr/local/bin"
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0744
      with_items:
        - {src: 'cheat-register-host.j2',           dest: '/usr/local/bin/cheat-register-host.sh'}

- hosts: mySatellite, !myShelter
  tasks:

    - name: "SAT6-POSTINSTALL: selinux restorecon -R /opt"
      shell:
        cmd: |
          restorecon -R /opt

    - name: "SAT6-POSTINSTALL: install cheat-(scripts) in /usr/local/bin"
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0744
      with_items:
        - {src: 'cheat-repos-sync.j2',           dest: '/usr/local/bin/cheat-repos-sync.sh'}
        - {src: 'cheat-repos-enable.j2',         dest: '/usr/local/bin/cheat-repos-enable.sh'}
        - {src: 'cheat-repos-policy.j2',         dest: '/usr/local/bin/cheat-repos-policy.sh'}
        - {src: 'cheat-repos-add-extras.j2',     dest: '/usr/local/bin/cheat-repos-add-extras.sh'}
        - {src: 'cheat-repos-add-optional.j2',   dest: '/usr/local/bin/cheat-repos-add-optional.sh'}
        - {src: 'cheat-repos-add-optional.j2',   dest: '/usr/local/bin/cheat-repos-add-kickstart.sh'}
        - {src: 'cheat-repos-add-rhel8.j2',      dest: '/usr/local/bin/cheat-repos-add-rhel8.sh'}
        - {src: 'cheat-app-lifecycles.j2',       dest: '/usr/local/bin/cheat-app-lifecycles.sh'}
        - {src: 'cheat-cv-create.j2',            dest: '/usr/local/bin/cheat-cv-create.sh'}
        - {src: 'cheat-cv-publish.j2',           dest: '/usr/local/bin/cheat-cv-publish.sh'}
        - {src: 'cheat-cv-promote.j2',           dest: '/usr/local/bin/cheat-cv-promote.sh'}
        - {src: 'cheat-cv-add-extras.j2',        dest: '/usr/local/bin/cheat-cv-add-extras.sh'}
        - {src: 'cheat-ak-create.j2',            dest: '/usr/local/bin/cheat-ak-create.sh'}
        - {src: 'cheat-ak-attach-subs.j2',       dest: '/usr/local/bin/cheat-ak-attach-subs.sh'}
        - {src: 'cheat-ak-autoenable.j2',        dest: '/usr/local/bin/cheat-ak-autoenable.sh'}
        - {src: 'cheat-manifest.j2',             dest: '/usr/local/bin/cheat-manifest.sh'}
        - {src: 'cheat-do-it-all.j2',            dest: '/usr/local/bin/cheat-do-it-all.sh'}

    - name: "SAT6-POSTINSTALL: yum clean all"
      shell:                                                                                           
        cmd: |                                                                                         
          yum clean all

    - name: "baremetal-deploy : create directories for ansible sat6-automation" 
      file: 
        path: "{{ item }}"
        mode: "0755"
        state: directory
        owner: root
        group: root
      with_items:
        - "/usr/local/share/sat6-automation" 
        - "/usr/local/share/sat6-automation/playbooks" 
      when: workshop_vars.satellite_version is version('6.12',operator='>=')

    - name: "SAT6-POSTINSTALL: install sat6-automation files"
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0744
      with_items:
        - {src: './files/ansible-sat6-automation.sh',                 dest: '/usr/local/share/sat6-automation/sat6-automation.sh'}
        - {src: './files/ansible-sat6-automation.yml',                dest: '/usr/local/share/sat6-automation/playbooks/sat6-automation.yml'}
        - {src: './files/ansible-sat6-automation-contentviews.yml',   dest: '/usr/local/share/sat6-automation/playbooks/sat6-automation-contentviews.yml'}
        - {src: './files/ansible-sat6-automation-lifecycles.yml',     dest: '/usr/local/share/sat6-automation/playbooks/sat6-automation-lifecycles.yml'}
        - {src: './files/ansible-sat6-automation-manifest.yml',       dest: '/usr/local/share/sat6-automation/playbooks/sat6-automation-manifest.yml'}
        - {src: './files/ansible-sat6-automation-repositories.yml',   dest: '/usr/local/share/sat6-automation/playbooks/sat6-automation-repositories.yml'}
        - {src: './files/ansible-sat6-automation-activationkeys.yml', dest: '/usr/local/share/sat6-automation/playbooks/sat6-automation-activationkeys.yml'}
      when: workshop_vars.satellite_version is version('6.12',operator='>=')

    - name: "SAT6-POSTINSTALL: install sat6-automation setup (config)"
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0744
      with_items:
        - {src: 'ansible-sat6-automation-setup.j2',        dest: '/usr/local/share/sat6-automation/setup.yml'}
      when: workshop_vars.satellite_version is version('6.12',operator='>=')



