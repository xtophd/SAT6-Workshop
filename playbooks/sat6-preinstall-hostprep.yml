---
- hosts: myNodes, mySatellite
  tasks:
    - name: "SAT6-PREINSTALL-HOSTPREP: yum remove old rhn tools"
      yum: name=rhn-setup,rhn-client-tools state=absent
      
    - name: "SAT6-PREINSTALL-HOSTPREP: modify /etc/motd"
      template:
        src: motd-sat6-workshop.j2
        dest: /etc/motd
        owner: root
        group: root
        mode: 0644

    - name: "SAT6-PREINSTALL-HOSTPREP:YUM install misc required packages"
      yum: name=wget,git,net-tools,bind-utils,yum-utils,iptables-services,bridge-utils,bash-completion,kexec-tools,sos,psacct,firewalld state=installed

    - name: "SAT6-PREINSTALL-HOSTPREP:SERVICE STOP firewalld"
      service: name=firewalld state=stopped enabled=yes

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD flushing any existing iptable rules"
      shell: 
        cmd: |
          iptables -F

    - name: "SAT6-PREINSTALL-HOSTPREP:SERVICE START firewalld"
      service: name=firewalld state=started enabled=yes



- hosts: myNodes
  tasks:

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD disable local yum repos"
      shell: 
        cmd: |          
          for i in `ls /etc/yum.repos.d | grep -v redhat.repo` ; do 
            sed -i 's/enabled=1/enabled=0/g' /etc/yum.repos.d/${i}
          done 

    - name: "SAT6-PREINSTALL-HOSTPREP:YUM remove insights-client"
      yum: name=insights-client state=absent



- hosts: mySatellite
  tasks:

    - name: "SAT6-PREINSTALL-HOSTPREP: debug of sat6_assets[{{ g_satelliteVersion }}]"
      debug: var=sat6_assets[g_satelliteVersion]['fs_data']

    ##
    ##    These are crude, but trying to accomodate 
    ##    satellite 6.3-6.9 in  various states of
    ##    installation.
    ##

    - name: "SAT6-PREINSTALL-HOSTPREP: stop puppet services if running"
      shell: if pgrep -u puppet; then systemctl stop puppet ; fi

    - name: "SAT6-PREINSTALL-HOSTPREP: stop satellite services if running (< 6.9)"
      shell: if which katello-service; then katello-service stop ; fi

    - name: "SAT6-PREINSTALL-HOSTPREP: stop satellite services if running (>= 6.9)"
      shell: if which satellite-maintain; then satellite-maintain service stop ; fi

    - name: "SAT6-PREINSTALL-HOSTPREP: stop mongodb services if running"
      shell: if pgrep -u mongodb; then systemctl stop mongod ; fi

    - name: "SAT6-PREINSTALL-HOSTPREP: stop squid services if running"
      shell: if pgrep -u squid; then systemctl stop squid ; fi

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD unmount previous satellite filesystems"
      vars:
        t_path: "{{ sat6_assets[g_satelliteVersion]['fs_data'][item]['path'] }}"
      shell:
        cmd: |
          if grep -q {{ t_path }} /proc/mounts ; then umount {{ t_path }} ; fi
      with_items: "{{ sat6_assets[g_satelliteVersion]['fs_data'] }}"

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD cleanup previous satellite storage"
      shell:
        cmd: |
          echo "need to check mounts && umount"
          if vgs "{{ myVG }}" ; then vgremove --force "{{ myVG }}" ; fi
          if pvs "{{ myDisk }}" ; then pvremove --force "{{ myDisk }}" ; fi
          wipefs -a "{{ myDisk }}"

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD create physical volume"
      shell:
        cmd: |
          pvcreate "{{ myDisk }}"

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD create volume group"
      shell:
        cmd: |
          vgcreate "{{ myVG }}" "{{ myDisk }}"

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD create logical volumes"
      vars:
        t_path: "{{ sat6_assets[g_satelliteVersion]['fs_data'][item]['path'] }}"
        t_size: "{{ sat6_assets[g_satelliteVersion]['fs_data'][item]['size'] }}"
        t_lv:   "{{ sat6_assets[g_satelliteVersion]['fs_data'][item]['lv'] }}"
        t_vg:   "{{ sat6_assets[g_satelliteVersion]['fs_data'][item]['vg'] }}"
      shell:
        cmd: |
          lvcreate -y -L {{ t_size }}GB  -n {{ t_lv }} {{ t_vg }}
      with_items: "{{ sat6_assets[g_satelliteVersion]['fs_data'] }}"

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD remove old cache directory"
      shell:
        cmd: |
          rm -rf /var/cache
          mkdir -p /var/cache

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD create filesystems, mount points and fstab entries"
      vars:
        t_path: "{{ sat6_assets[g_satelliteVersion]['fs_data'][item]['path'] }}"
        t_lv:   "{{ sat6_assets[g_satelliteVersion]['fs_data'][item]['lv'] }}"
        t_vg:   "{{ sat6_assets[g_satelliteVersion]['fs_data'][item]['vg'] }}"
      shell:
        cmd: |
          mkfs -t xfs /dev/{{ t_vg }}/{{ t_lv }}
          mkdir -p {{ t_path }}
          grep -q {{ t_path }} /etc/fstab || echo "/dev/mapper/{{t_vg}}-{{ t_lv }} {{ t_path }} xfs defaults 0 0" >> /etc/fstab
      with_items: "{{ sat6_assets[g_satelliteVersion]['fs_data'] }}"

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD mount everything"
      shell:
        cmd: |
          mount -a

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD create additional sub-directories"
      file:
        path:  "{{ item.path  }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode:  "{{ item.mode  }}"
        state: directory
      with_items:
        - {path: '/var/lib/pulp/cache', owner: 'root', group: 'root', mode: '0755'}

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD create link for pulp cache direcotory"
      file:
        path: "/var/cache/pulp"
        src:  "/var/lib/pulp/cache"
        state: link

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD restore selinux contexts on new filesystems"
      vars:
        t_path: "{{ sat6_assets[g_satelliteVersion]['fs_data'][item]['path'] }}"
      shell:
        cmd: |
          restorecon -R {{ t_path }}
      with_items: "{{ sat6_assets[g_satelliteVersion]['fs_data'] }}"

    - name: "SAT6-PREINSTALL-HOSTPREP:CMD configure firewalld"
      shell:
        cmd: |
          firewall-cmd --add-port="{{ item.port }}"
      with_items:
        - {port: "7/udp"}
        - {port: "7/tcp"}
        - {port: "53/udp"}
        - {port: "53/tcp"}
        - {port: "67/udp"}
        - {port: "69/udp"}
        - {port: "80/tcp"}
        - {port: "443/tcp"} 
        - {port: "5000/tcp"}
        - {port: "5646/tcp"}
        - {port: "5647/tcp"}
        - {port: "8000/tcp"}
        - {port: "8140/tcp"}
        - {port: "9090/tcp"}

    - name: "SAT6-PREINSTALL-HOSTPREP: CMD save firewalld state"
      shell:
        cmd: |
          firewall-cmd --runtime-to-permanent
              
